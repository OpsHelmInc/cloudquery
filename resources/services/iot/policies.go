// Code generated by codegen; DO NOT EDIT.

package iot

import (
	"github.com/OpsHelmInc/cloudquery/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Policies() *schema.Table {
	return &schema.Table{
		Name:                "aws_iot_policies",
		Description:         `https://docs.aws.amazon.com/iot/latest/apireference/API_Policy.html`,
		Resolver:            fetchIotPolicies,
		PreResourceResolver: getIotPolicy,
		Multiplex:           client.ServiceAccountRegionMultiplexer("iot"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PolicyArn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "creation_date",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("CreationDate"),
			},
			{
				Name:     "default_version_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("DefaultVersionId"),
			},
			{
				Name:     "generation_id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("GenerationId"),
			},
			{
				Name:     "last_modified_date",
				Type:     schema.TypeTimestamp,
				Resolver: schema.PathResolver("LastModifiedDate"),
			},
			{
				Name:     "policy_document",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PolicyDocument"),
			},
			{
				Name:     "policy_name",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("PolicyName"),
			},
			{
				Name:     "result_metadata",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ResultMetadata"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: client.ResolveTags,
			},
		},
	}
}
