// Code generated by codegen; DO NOT EDIT.

package elbv2

import (
	"github.com/OpsHelmInc/cloudquery/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func LoadBalancers() *schema.Table {
	return &schema.Table{
		Name:                "aws_elbv2_load_balancers",
		Description:         `https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_LoadBalancer.html`,
		Resolver:            fetchElbv2LoadBalancers,
		PreResourceResolver: getLoadBalancer,
		Multiplex:           client.ServiceAccountRegionMultiplexer("elasticloadbalancing"),
		Columns: []schema.Column{
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
			},
			{
				Name:     "region",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSRegion,
			},
			{
				Name:          "web_acl_arn",
				Type:          schema.TypeString,
				Resolver:      resolveElbv2loadBalancerWebACLArn,
				IgnoreInTests: true,
			},
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("LoadBalancerArn"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "oh_resource_type",
				Type:     schema.TypeString,
				Resolver: client.StaticValueResolver("AWS::ElasticLoadBalancingV2::LoadBalancer"),
			},
			{
				Name:     "load_balancer",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("LoadBalancer"),
			},
			{
				Name:     "tags",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Tags"),
			},
			{
				Name:     "unknown_attributes",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("UnknownAttributes"),
			},
		},

		Relations: []*schema.Table{
			Listeners(),
		},
	}
}
