// Code generated by codegen; DO NOT EDIT.

package iam

import (
	"github.com/OpsHelmInc/cloudquery/client"
	"github.com/OpsHelmInc/cloudquery/plugin-sdk/schema"
)

func Users() *schema.Table {
	return &schema.Table{
		Name:                "aws_iam_users",
		Description:         `https://docs.aws.amazon.com/IAM/latest/APIReference/API_User.html`,
		Resolver:            fetchIamUsers,
		PreResourceResolver: getUser,
		Multiplex:           client.AccountMultiplex,
		Columns: []schema.Column{
			{
				Name:     "arn",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("Arn"),
			},
			{
				Name:     "id",
				Type:     schema.TypeString,
				Resolver: schema.PathResolver("UserId"),
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "account_id",
				Type:     schema.TypeString,
				Resolver: client.ResolveAWSAccount,
				CreationOptions: schema.ColumnCreationOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:     "oh_resource_type",
				Type:     schema.TypeString,
				Resolver: client.StaticValueResolver("AWS::IAM::User"),
			},
			{
				Name:     "user",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("User"),
			},
			{
				Name:     "inline_policies",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("InlinePolicies"),
			},
			{
				Name:     "attached_policies",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("AttachedPolicies"),
			},
			{
				Name:     "groups",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Groups"),
			},
			{
				Name:     "mfa_devices",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("MFADevices"),
			},
			{
				Name:     "login_profile",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("LoginProfile"),
			},
			{
				Name:     "password_set",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("PasswordSet"),
			},
			{
				Name:     "mfa_active",
				Type:     schema.TypeBool,
				Resolver: schema.PathResolver("MFAActive"),
			},
			{
				Name:     "access_keys",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("AccessKeys"),
			},
		},

		Relations: []*schema.Table{
			UserAccessKeys(),
			UserGroups(),
			UserAttachedPolicies(),
			UserPolicies(),
		},
	}
}
